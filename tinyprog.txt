#include <transd.hpp>


using namespace std;

int width = 1000;
int height = 1000;
int sz = width * height * 3;


int wmain( int argc, wchar_t* argv[] )
{
	wstring testFilePath = L"D:\\transd\\tst\\assdesc.nqj";
	transd::HPROG prog = transd::createAssembly();
	transd::Func* func = transd::loadProgram( prog, testFilePath, L"tst::getShade" );	double* x = (double*)transd::getExportVariable( prog, L"x" );	double* y = (double*)transd::getExportVariable( prog, L"y" );
	vector<uint8_t> outbuf(sz);

	for( int i = 0; i < width; ++i ) {
		for( int k = 0; k < height; ++k ) {
			*x = (double)i - width / 2;
			*y = (double)k;

			int res = *(int*)transd::execute( func );
			uint8_t	shade = 255 * res;

			int k1 = height - k - 1;
			outbuf[3 * k1*width + 3 * i] = shade;
			outbuf[3 * k1*width + 3 * i + 1] = shade;
			outbuf[3 * k1*width + 3 * i + 2] = shade;
		}
	}

	string outFileName = "D:\\graph.ppm";
	FILE* f = fopen( outFileName.c_str(), "wb" );
	char buf[40];
	sprintf( buf, "P6 %d %d 255\n", width, height );
	fwrite( buf, strlen( buf ), 1, f );
	unsigned char* p = (uint8_t*)&outbuf[0];
	for( int i = 0; i <= sz - width * 3; i += width * 3 ) {
		fwrite( p + i, width * 3, 1, f );
	}
	fclose( f );
	return 0;
}
